#name: Java CI with Maven
#
#on:
#  workflow_dispatch:
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#
#    - name: Create Branch Date
#      run: |
#        echo "Branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
#        echo "Date=$(date +'%d-%m-%y')" >> $GITHUB_ENV
#
#    - name: Check Branch Date
#      run: |
#        echo "Branch= ${{ env.Branch }}"
#        echo "Date= ${{ env.Date }}"
#
#    - name: Build with Maven
#      run: mvn clean install
#
#    - name: Define Tag
#      run: |
#        IMAGE_NAME="sharmanayan/abc"
#        TAG="${{ env.Branch }}-${{ env.Date }}"
#        DOCKERHUB_TAGS=$(curl -s -H "Authorization: Bearer dckr_pat_ynxOJfBS7qKogS2cQVD78HUTto0" "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags?page_size=10" | jq -r '.results[].name' | tr ' ' '\n' | sort -Vr | tr '\n' ' ' | awk '{print $1}')
#        echo "Docker tags: $DOCKERHUB_TAGS"
#        if [ -n "$DOCKERHUB_TAGS" ]; then
#          NUMERIC_PART="${DOCKERHUB_TAGS##*.}"
#          echo "NUMERIC PART: $NUMERIC_PART"
#          NUMERIC_PARTS=$((NUMERIC_PART + 1))
#          echo "NUMERIC PART: $NUMERIC_PARTS"
#          DOCKER_TAG="$IMAGE_NAME:$TAG.$NUMERIC_PARTS"
#          echo "FINAL TAG: $DOCKER_TAG"
#          echo "DOCKER_TAG=$DOCKER_TAG"  >> $GITHUB_ENV
#        else
#          DOCKER_TAG="$IMAGE_NAME:$TAG.1"
#          echo "Final Tag: $DOCKER_TAG"
#          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
#        fi
#
#    - name: Check tag
#      run: |
#        echo "Tag Is: ${{ env.DOCKER_TAG }}"
#
#    - name: Build and push Docker image
#      run: |
#        echo "Qwerty@12345" | docker login -u sharmanayan --password-stdin
#        docker build -t ${{ env.DOCKER_TAG }} .
#        docker push ${{ env.DOCKER_TAG }}

name: Recreating

on:
  workflow_dispatch:
    inputs:
      runStage:
        description: 'Select the stage to run'
        required: true
        default: 'build'
        options:
          - 'build'
          - 'deploy'

jobs:
  build:

    runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean install


#    - name: Define Tagging statement
#      run: |
#        IMAGE_NAME="sharmanayan/abc2"
#        TAGGING="${{ env.BRANCH }}-${{ env.DATE }}"
#        DOCKER_HUB=$(curl -s -H "Authorization: Bearer dckr_pat_ynxOJfBS7qKogS2cQVD78HUTto0" "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags?page_size=10" | jq -r '.results[].name' | tr ' ' '\n' | sort -Vr | tr '\n' ' ' | awk '{print $1}')
#        echo "DOCKER HUB TAG: $DOCKER_HUB"
#        if [ -n "$DOCKER_HUB" ]; then
#          NUMERIC_PART="${DOCKER_HUB##*-}"
#          NUMERIC_PART=$((NUMERIC_PART + 1))
#          echo "NUMERIC PARTS IS: $NUMERIC_PART"
#          NEW_TAG="$IMAGE_NAME:$TAGGING-$NUMERIC_PART"
#          echo "NEW TAG IS: $NEW_TAG"
#          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
#        else
#          NEW_TAG="$IMAGE_NAME:$TAGGING-1"
#          echo "NEW TAG IS: $NEW_TAG"
#          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
#        fi
#
#
#    - name: TAG CHECK
#      run: |
#        echo "DOCKER TAG IS: ${{ env.NEW_TAG }}"
#
#    - name: DOCKER BUILD AND PUSH
#      run: |
#        echo "Qwerty@12345" | docker login -u sharmanayan --password-stdin
#        docker build -t ${{ env.NEW_TAG }} .
#        docker push ${{ env.NEW_TAG }}


  push:

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Assign Branch & Date
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "DATE=$(date +'%d_%m_%y')" >> $GITHUB_ENV

      - name: Check Branch & Date
        run: |
          echo "Branch is: ${{ env.BRANCH }}"
          echo "Date is: ${{ env.DATE }}"
          echo "TAG=${{ env.BRANCH }}-${{ env.DATE }}-1" >> $GITHUB_ENV

      - name: Check Final Tag
        run: |
          echo "Tag is: ${{ env.TAG }}"  

      - name: Define Tagging statement
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/abc2"
          TAGGING="${{ env.BRANCH }}-${{ env.DATE }}"
          echo "TAG IS: $TAGGING"
          DOCKER_HUB=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKER_TOKEN }}" "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags?page_size=10" | jq -r '.results[].name' | tr ' ' '\n' | sort -Vr | tr '\n' ' ' | awk '{print $1}')
          echo "DOCKER HUB TAG: $DOCKER_HUB"
          if [ -z "$DOCKER_HUB" ]; then
            NEW_TAG="$IMAGE_NAME:$TAGGING-1"
            echo "NEW TAG IS: $NEW_TAG"
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV          
          else 
            NUMERIC_PART=$(echo "$DOCKER_HUB" | awk -F'-' '{print $3}')
            NUMERIC_PART=$((NUMERIC_PART + 1))
            echo "NUMERIC PARTS IS: $NUMERIC_PART"
            NEW_TAG="$IMAGE_NAME:$TAGGING-$NUMERIC_PART"
            echo "NEW TAG IS: $NEW_TAG"
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          fi

      - name: TAG CHECK
        run: |
          echo "DOCKER TAG IS: ${{ env.NEW_TAG }}"

      - name: DOCKER BUILD AND PUSH
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}    
          docker build -t ${{ env.NEW_TAG }} .
          docker push ${{ env.NEW_TAG }}